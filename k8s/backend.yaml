apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: kanban-app
  name: kanban-app
  namespace: test-bcc
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kanban-app
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: kanban-app
    spec:
      serviceAccountName: workload-identity
      containers:
        - name: kanban-app
          env:
            - name: DB_SERVER
              value: 127.0.0.1
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PASSWORD
              value: alloydb-cluster
            - name: POSTGRES_USER
              value: iccrea
          image: europe-west1-docker.pkg.dev/bcc-alloy-gke-gke/gke-registry/kanban-app:1
          ports:
            - containerPort: 8080
          resources: {}
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL Auth Proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/alloydb-connectors/alloydb-auth-proxy:latest
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "--private-ip"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"

            # Replace DB_PORT with the port the proxy should listen on
            - "--port=5432"
            - "projects/bcc-alloy-gke-gke/locations/us-central1/clusters/alloydb-new-cluster/instances/alloydb-new-instance"
          
          securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu:    "1"      
      restartPolicy: Always
status: {}
